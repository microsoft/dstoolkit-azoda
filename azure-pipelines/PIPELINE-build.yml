trigger:
- main

pr:
  branches:
    include:
    - '*'

variables:
- template: ../configuration/configuration-aml.variables.yml
- template: ../configuration/configuration-infra-DEV.variables.yml

pool:
  vmImage: $(VM_VERSION)

stages:

############################
##      Run Linting       ##
############################

- stage: Run_Linting
  displayName: 'Run Linting'
  jobs:
  - job: run_linting
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
    - script: pip install flake8
      displayName: 'Install Flake8'
    - script: flake8 .
      displayName: 'Run lint tests'

############################
##    Build Test Docker   ##
############################

- stage: Build_Test_Image
  displayName: 'Build Test Docker'
  dependsOn: Run_Linting
  jobs:
  - template: templates/docker-build.template.yml
    parameters:
      dockerfile: docker/tf_1/Dockerfile
      repository: tensorflowobjectdetection
      acrServiceConnection: conn-detection-acr-dev
      buildContext: $(Build.Repository.LocalPath)
      tags: test

############################
##     Run Unit Test      ##
############################

- stage: Run_Unit_Test
  displayName: 'Run Unit Test'
  dependsOn: Build_Test_Image
  jobs:
  - job: unit_test
    condition: succeeded()
    pool:
      vmImage: $(VM_VERSION)
    container:
      image: tensorflowobjectdetection:test
      endpoint: conn-detection-acr-dev
    steps:
    - script: pytest .
      displayName: 'Run unit tests'

############################
##  Build Latest Docker   ##
############################

- stage: Build_Training_Image
  displayName: 'Build Training Image'
  dependsOn: Run_Unit_Test
  jobs:
  - template: templates/docker-build.template.yml
    parameters:
      dockerfile: docker/tf_1/Dockerfile
      repository: tensorflowobjectdetection
      acrServiceConnection: conn-detection-acr-dev
      buildContext: $(Build.Repository.LocalPath)
      tags: latest