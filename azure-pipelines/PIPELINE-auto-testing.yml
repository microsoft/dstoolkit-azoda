name: Deployment testing

trigger: none

pool:
  vmImage: ubuntu-latest

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'ARMSC'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      
      echo '--- Installing required libraries ---'
      
      pip install azureml-sdk==1.39.0 scikit-learn==1.0.2 matplotlib==3.5.1 pandas==1.4.1 opencv-python==4.5.5.62
      az config set extension.use_dynamic_install=yes_without_prompt
      az extension add -n ml -y
      python --version

      echo '--- Setting variables ---'
      workspace_name=azoda-amlw
      resource_group=azoda-rg
      subscription_id_str=$(az account list --query "[?isDefault].id | [0]")
      subscription_id=$(echo $subscription_id_str | tr -d \")
      tenant_id_str=$(az account list --query "[?isDefault].tenantId|[0]")
      tenant_id=$(echo $tenant_id_str | tr -d \")
      run_id_str=$(az ml job list --resource-group $resource_group --workspace-name $workspace_name --query "[-1].name")
      run_id_id=$(echo $run_id_str | tr -d \")
      aml_storage_account_name_str=$(az ml datastore list --resource-group $resource_group --workspace-name $workspace_name --query "[0].{account_name:account_name}.account_name")
      aml_storage_account_name=$(echo $aml_storage_account_name_str | tr -d \")
      aml_container_str=$(az ml datastore show --name workspaceblobstore --resource-group $resource_group --workspace-name $workspace_name --query container_name)
      aml_container=$(echo $aml_container_str | tr -d \")

      echo '--- Download dataset from storage account ---'
      az storage blob directory download -c $aml_container --account-name $aml_storage_account_name -s $(DATASET)/ -d "." --recursive

      echo '--- Extract test images from dataset ---'
      cd src/auto_setup
      python extract_test_images.py --dataset $(DATASET)

      echo '--- Use endpoint for inference on test dataset ---'
      python infer_with_endpoint.py --endpoint $(ENDPOINT) --key $(KEY) --dataset $(DATASET)
      
      echo '--- Export confusion matrix artifact ---'
      python create_confusion_matrix.py --dataset $(DATASET)