# Pipeline for example deployment
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: ubuntu-latest

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.8'
    addToPath: true
    architecture: 'x64'
- task: AzureCLI@2
  inputs:
    azureSubscription: 'ICARM'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Variables
      workspace_name=tfod-dev-amlw
      resource_group=tfod-dev-rg
      acr_name=tfoddevacr
      subscription_id_str=$(az account list --query "[?isDefault].id | [0]")
      subscription_id="${subscription_id_str:1:${#subscription_id_str}-2}"
      tenant_id_str=$(az account list --query "[?isDefault].tenantId|[0]")
      tenant_id="${tenant_id_str:1:${#tenant_id_str}-2}"
      run_id_str=$(az ml job list --resource-group tfod-dev-rg --workspace-name tfod-dev-amlw --query "[0].name")
      run_id="${run_id_str:1:${#run_id_str}-2}"
      python --version
      # Install required libraries
      pip install numpy opencv-python pandas
      pip install --index-url https://pkgs.dev.azure.com/watchfor/WatchForTools/_packaging/w4Tools/pypi/simple/ watchfor-pixiev3==0.3.16
      sudo apt install ffmpeg -y
      pip install ffprobe
      pip uninstall ffmpeg-python -y
      pip install ffmpeg-python packaging
      # Set config to automatically agree to command without prompt
      az config set extension.use_dynamic_install=yes_without_prompt

      # Create synthetic dataset
      python src/auto_setup/synthetic_dataset_creation.py

      # Upload images to pixie
      echo $(API)
      echo $(KEY)
      cd src/auto_setup
      pip freeze
      python export_images_to_pixie.py --api $(API) --key $(KEY) --project synthetic_dataset