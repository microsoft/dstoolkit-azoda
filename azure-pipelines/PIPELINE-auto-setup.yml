name: Setup Infrastructure

trigger: none

pool:
  vmImage: ubuntu-latest

steps:
- script: |     
    docker build . -f docker/tf_2/Dockerfile --no-cache
  displayName: 'Docker build'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'ARMSC'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |

      echo '--- Setting variables ---'
      subscription_id_str=$(az account list --query "[?isDefault].id | [0]")
      subscription_id=$(echo $subscription_id_str | tr -d \")
      tenant_id_str=$(az account list --query "[?isDefault].tenantId|[0]")
      tenant_id=$(echo $tenant_id_str | tr -d \")
      workspace_name=tfod-dev-amlw
      resource_group=tfod-dev-rg-demo
      location=westeurope
      acr_name=$(echo tfod$subscription_id | tr -d -)

      echo '--- Installing required libraries ---'
      pip install -e src/packages/azure_utils
      pip install azureml-sdk==1.39.0 numpy==1.22.3 opencv-python==4.5.5.62 pandas==1.4.1

      echo '--- Create resource group ---'
      az group create --name $resource_group --location $location

      echo '--- Create a container registry ---'
      az acr create --resource-group $resource_group --name $acr_name --sku Standard --admin-enabled true

      echo '--- Authenticating ---'
      az acr login -n $acr_name

      echo '--- Getting latest docker image ID ---'
      IMAGE_ID=$(docker images | awk '{print $3}' | awk 'NR==2')

      echo '--- Tagging latest image ---'
      docker tag $IMAGE_ID ${acr_name}.azurecr.io/tensorflowobjectdetection:latest

      echo '--- Pushing docker image to ACR ---'
      docker push ${acr_name}.azurecr.io/tensorflowobjectdetection:latest

      echo '--- Listing docker containers ---'
      docker container ls

      echo '--- Downloading TF2 model ---'
      wget "http://download.tensorflow.org/models/object_detection/tf2/20200711/faster_rcnn_resnet50_v1_640x640_coco17_tpu-8.tar.gz"

      echo '--- Decompressing TF2 model ---'
      tar -xf faster_rcnn_resnet50_v1_640x640_coco17_tpu-8.tar.gz

      echo '--- Setting automatic yes to prompts ---'
      az config set extension.use_dynamic_install=yes_without_prompt

      echo '--- Creating a synthetic dataset ---'
      python src/auto_setup/synthetic_dataset_creation.py

      echo '--- Creating AML config ---'
      python src/auto_setup/write_aml_template_yaml.py --subscription $subscription_id --resource_group $resource_group --workspace $workspace_name --acr_name $acr_name

      echo '--- Creating AML Workspace ---'
      az extension add -n ml -y
      az ml workspace create -n $workspace_name -g $resource_group --file aml_config.yaml

      echo '--- Creating GPU compute instance ---'
      az ml compute create --max-instances 3 --name gpu-1 --size Standard_NC6 --workspace-name $workspace_name --resource-group $resource_group --no-wait --type AmlCompute

      echo '--- Fetching AML storage account name ---'
      aml_storage_account_name_str=$(az ml datastore list --resource-group $resource_group --workspace-name $workspace_name --query "[0].{account_name:account_name}.account_name")
      aml_storage_account_name=$(echo $aml_storage_account_name_str | tr -d \")

      echo '--- Uploading model and dataset to container ---'
      echo '--- Fetching AML container name ---'
      aml_container_str=$(az ml datastore show --name workspaceblobstore --resource-group $resource_group --workspace-name $workspace_name --query container_name)
      aml_container=$(echo $aml_container_str | tr -d \")

      echo '--- Uploading TF2 model to AML container ---'
      az storage blob directory upload -c $aml_container --account-name $aml_storage_account_name -s 'faster_rcnn_resnet50_v1_640x640_coco17_tpu-8/' -d 'models' --recursive

      echo '--- Uploading synthetic dataset to AML container ---'
      az storage blob directory upload -c $aml_container --account-name $aml_storage_account_name -s 'synthetic_dataset/' -d '.' --recursive