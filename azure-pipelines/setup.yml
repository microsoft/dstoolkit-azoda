name: Setup Infrastructure

trigger: none

pool:
  vmImage: ubuntu-20.04

variables:
- group: vars

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'ARMSC'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |

      echo '--- Setting variables ---'
      subscription_id_str=$(az account list --query "[?isDefault].id | [0]")
      subscription_id=$(echo $subscription_id_str | tr -d \")
      tenant_id_str=$(az account list --query "[?isDefault].tenantId|[0]")
      tenant_id=$(echo $tenant_id_str | tr -d \")
      workspace_name=azoda-amlw
      resource_group=azoda-rg
      location=westeurope
      acr_name=$(echo azoda$subscription_id | tr -d -)
      cv_name=azodacv14
      keyvault_name=azoda-kv
      cv_secret_name=cvkey

      echo '--- Installing required libraries ---'
      pip install azureml-sdk==1.39.0 numpy==1.22.3 opencv-python==4.5.5.62 pandas==1.4.1

      echo '--- Create resource group ---'
      az group create --name $resource_group --location $location

      echo '--- Create a container registry ---'
      az acr create --resource-group $resource_group --name $acr_name --sku Standard --admin-enabled true

      echo '--- Setting automatic yes to prompts ---'
      az config set extension.use_dynamic_install=yes_without_prompt

      echo '--- Creating a synthetic dataset ---'
      python src/auto_setup/synthetic_dataset_creation.py

      echo '--- Creating AML config ---'
      python src/auto_setup/write_aml_template_yaml.py --subscription $subscription_id --resource_group $resource_group --workspace $workspace_name --acr_name $acr_name

      echo '--- Creating AML Workspace ---'
      az extension add -n ml -y
      az ml workspace create -n $workspace_name -g $resource_group --file aml_config.yaml

      echo '--- Creating GPU compute instance ---'
      az ml compute create --max-instances 2 --name gpu-1 --size Standard_NC6 --workspace-name $workspace_name --resource-group $resource_group --no-wait --type AmlCompute --idle-time-before-scale-down 1800

      echo '--- Fetching AML storage account name ---'
      aml_storage_account_name_str=$(az ml datastore list --resource-group $resource_group --workspace-name $workspace_name --query "[0].{account_name:account_name}.account_name")
      aml_storage_account_name=$(echo $aml_storage_account_name_str | tr -d \")

      echo '--- Fetching AML container name ---'
      aml_container_str=$(az ml datastore show --name workspaceblobstore --resource-group $resource_group --workspace-name $workspace_name --query container_name)
      aml_container=$(echo $aml_container_str | tr -d \")

      echo '--- Uploading synthetic dataset to AML container ---'
      az storage blob directory upload -c $aml_container --account-name $aml_storage_account_name -s 'synthetic_dataset/' -d '.' --recursive

      echo '--- Setting devops configuration ---'
      az devops configure --defaults organization=https://dev.azure.com/$(organization_name) project=$(project_name)
      
      echo '--- Creating Custom Vision resource ---'
      az cognitiveservices account create --name $cv_name --resource-group $resource_group --kind CustomVision.Training --sku F0 --location westeurope
      
      echo '--- Getting Custom Vision key ---'
      key=$(az cognitiveservices account keys list --name $cv_name --resource-group $resource_group | jq -r ".key1")
      
      echo '--- Creating keyvault ---'
      az config set defaults.location=westeurope
      az keyvault create --name $keyvault_name --resource-group $resource_group

      echo '--- Store Custom Vision secret in keyvault ---'
      az keyvault secret set --name $cv_secret_name --value $key --vault-name $keyvault_name
